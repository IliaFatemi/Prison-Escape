Index: src/main/java/com/group10/app/main/Collision.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.main;\n\nimport com.group10.app.entity.Entity;\n\n/**\n * Collision class for wall collision and object collision.\n */\npublic class Collision {\n\n    /**\n     * Game panel will be used to access it's methods and variables\n     */\n    GamePanel gp;\n\n    /**\n     * @param gp the GamePanel object\n     */\n    public Collision (GamePanel gp){\n        this.gp = gp;\n    }\n\n\n    /**\n     * wallCheck will check to see if the player is within a certain range of the block and will set the entity collision to true if the condiiton is true.\n     * @param entity The entity that will be interacting with walls of the map\n     */\n    public void wallCheck(Entity entity){\n        int entityLeftWorldX = entity.x + entity.solidArea.x;\n        int entityRightWorldX = entity.x + entity.solidArea.x + entity.solidArea.width;\n        int entityTopWorldY = entity.y + entity.solidArea.y;\n        int entityBottomWorldY = entity.y + entity.solidArea.y + entity.solidArea.height;\n\n        int LeftCol = entityLeftWorldX/gp.cellSize;\n        int RightCol = entityRightWorldX/gp.cellSize;\n        int TopRow = entityTopWorldY/gp.cellSize;\n        int BottomRow = entityBottomWorldY/gp.cellSize;\n\n        int tile1, tile2;\n\n        switch (entity.direction) {\n            case \"up\":\n                TopRow = (entityTopWorldY - entity.speed) / gp.cellSize;\n                tile1 = gp.tileManage.mapTileNum[LeftCol][TopRow];\n                tile2 = gp.tileManage.mapTileNum[RightCol][TopRow];\n                if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {\n                    entity.collision = true;\n                }\n            break;\n            case \"down\":\n                BottomRow = (entityBottomWorldY - entity.speed) / gp.cellSize;\n                tile1 = gp.tileManage.mapTileNum[LeftCol][BottomRow];\n                tile2 = gp.tileManage.mapTileNum[RightCol][BottomRow];\n                if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {\n                    entity.collision = true;\n                }\n            break;\n            case \"left\":\n                LeftCol = (entityLeftWorldX + entity.speed) / gp.cellSize;\n                tile1 = gp.tileManage.mapTileNum[LeftCol][TopRow];\n                tile2 = gp.tileManage.mapTileNum[LeftCol][BottomRow];\n                if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {\n                    entity.collision = true;\n                }\n            break;\n            case \"right\":\n                RightCol = (entityRightWorldX - entity.speed) / gp.cellSize;\n                tile1 = gp.tileManage.mapTileNum[RightCol][TopRow];\n                tile2 = gp.tileManage.mapTileNum[RightCol][BottomRow];\n                if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {\n                    entity.collision = true;\n                }\n            break;\n        }\n    }\n\n    /**\n     * To check if any object in obj list collide with inmate.\n     *\n     * <p>\n     *     Check objects one by one in obj list.\n     *     Get each object's solidArea, and inmate's solidArea by direction.\n     *     Judge the object if collide with inmate.\n     *     If any of object collide with inmate, return the object index.\n     *     Otherwise, return 999 means no object touch inmate.\n     * </p>\n     *\n     * @param entity passing entity to charge as a parameter\n     * @return       index of the object if anyone collides with inmate, or 999\n     */\n    public int checkObject(Entity entity) {\n\n        int index = 999;\n\n        for (int i = 0; i < gp.obj.length; i++){\n            if (gp.obj[i] != null){\n\n                //Get entity's solid area position\n                entity.solidArea.x = entity.x + entity.solidArea.x;\n                entity.solidArea.y = entity.y + entity.solidArea.y;\n                //Get the object's solid area position\n                gp.obj[i].solidArea.x = gp.obj[i].x + gp.obj[i].solidArea.x;\n                gp.obj[i].solidArea.y = gp.obj[i].y + gp.obj[i].solidArea.y;\n\n                switch (entity.direction) {\n                    case \"up\" : {\n                        entity.solidArea.y -= entity.speed;\n                        if (entity.solidArea.intersects(gp.obj[i].solidArea)) {\n                            if (gp.obj[i].collision) {\n                                entity.collision = true;\n                            }\n                            index = i;\n                        }\n                    }\n                    case \"down\" : {\n                        entity.solidArea.y += entity.speed;\n                        if (entity.solidArea.intersects(gp.obj[i].solidArea)) {\n                            if (gp.obj[i].collision) {\n                                entity.collision = true;\n                            }\n                            index = i;\n                        }\n                    }\n                    case \"left\" : {\n                        entity.solidArea.x -= entity.speed;\n                        if (entity.solidArea.intersects(gp.obj[i].solidArea)) {\n                            if (gp.obj[i].collision) {\n                                entity.collision = true;\n                            }\n                            index = i;\n                        }\n                    }\n                    case \"right\" : {\n                        entity.solidArea.x += entity.speed;\n                        if (entity.solidArea.intersects(gp.obj[i].solidArea)) {\n                            if (gp.obj[i].collision) {\n                                entity.collision = true;\n                            }\n                            index = i;\n                        }\n                    }\n                }\n\n                entity.solidArea.x = entity.solidX;\n                entity.solidArea.y = entity.solidY;\n                gp.obj[i].solidArea.x = gp.obj[i].solidX;\n                gp.obj[i].solidArea.y = gp.obj[i].solidY;\n            }\n        }\n\n        return index;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/Collision.java b/src/main/java/com/group10/app/main/Collision.java
--- a/src/main/java/com/group10/app/main/Collision.java	(revision dcdde8ac31623e29bb1408320c15883e18b94c9b)
+++ b/src/main/java/com/group10/app/main/Collision.java	(date 1648161016196)
@@ -47,7 +47,7 @@
                 }
             break;
             case "down":
-                BottomRow = (entityBottomWorldY - entity.speed) / gp.cellSize;
+                BottomRow = (entityBottomWorldY + entity.speed) / gp.cellSize;
                 tile1 = gp.tileManage.mapTileNum[LeftCol][BottomRow];
                 tile2 = gp.tileManage.mapTileNum[RightCol][BottomRow];
                 if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {
@@ -55,7 +55,7 @@
                 }
             break;
             case "left":
-                LeftCol = (entityLeftWorldX + entity.speed) / gp.cellSize;
+                LeftCol = (entityLeftWorldX - entity.speed) / gp.cellSize;
                 tile1 = gp.tileManage.mapTileNum[LeftCol][TopRow];
                 tile2 = gp.tileManage.mapTileNum[LeftCol][BottomRow];
                 if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {
@@ -63,7 +63,7 @@
                 }
             break;
             case "right":
-                RightCol = (entityRightWorldX - entity.speed) / gp.cellSize;
+                RightCol = (entityRightWorldX + entity.speed) / gp.cellSize;
                 tile1 = gp.tileManage.mapTileNum[RightCol][TopRow];
                 tile2 = gp.tileManage.mapTileNum[RightCol][BottomRow];
                 if (gp.tileManage.tile[tile1].collision || gp.tileManage.tile[tile2].collision) {
Index: src/main/java/com/group10/app/entity/Guard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity;\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport com.group10.app.main.GamePanel;\n\n/**\n * The guard class in charge of the Guard implementation\n *\n * <p>\n *     This class implements the guard functionality for the game\n *     manages the guards movements, interactions, drawing the sprites and\n *     changing them with the guards movements.\n * </p>\n *\n */\npublic class Guard extends Entity{\n    GamePanel gp;\n    int standCounter = 0;\n\n    /**\n     * The constructor for the Guard class\n     *\n     * <p>\n     *     In charge of initializing the position of the guard with respect to the\n     *     game panel gp\n     * </p>\n     *\n     * @param gp main game panel\n     * @param setX x position for the guard\n     * @param setY y position for the guard\n     */\n    public Guard(GamePanel gp, int setX, int setY){\n        super(gp);\n        this.gp = gp;\n        getGuardImage();\n        setGuardValues(setX, setY);\n        solidArea = new Rectangle(0, 0, 48, 48);\n\n        solidAreaDefaultX = solidArea.x;\n        solidAreaDefaultY = solidArea.y;\n    }\n\n    /**\n     * getGuardImage method is in charge of registering the image directories for the guard enemy\n     */\n    public void getGuardImage(){\n        up1 = setup(\"/prisonGuard/WalkUp1\", gp.cellSize, gp.cellSize);\n        up2 = setup(\"/prisonGuard/WalkUp2\", gp.cellSize, gp.cellSize);\n        up3 = setup(\"/prisonGuard/WalkUp3\", gp.cellSize, gp.cellSize);\n        up4 = setup(\"/prisonGuard/WalkUp4\", gp.cellSize, gp.cellSize);\n        up5 = setup(\"/prisonGuard/WalkUp5\", gp.cellSize, gp.cellSize);\n        down1 = setup(\"/prisonGuard/WalkDown1\", gp.cellSize, gp.cellSize);\n        down2 = setup(\"/prisonGuard/WalkDown2\", gp.cellSize, gp.cellSize);\n        down3 = setup(\"/prisonGuard/WalkDown3\", gp.cellSize, gp.cellSize);\n        down4 = setup(\"/prisonGuard/WalkDown4\", gp.cellSize, gp.cellSize);\n        down5 = setup(\"/prisonGuard/WalkDown5\", gp.cellSize, gp.cellSize);\n        left1 = setup(\"/prisonGuard/WalkLeft1\", gp.cellSize, gp.cellSize);\n        left2 = setup(\"/prisonGuard/WalkLeft2\", gp.cellSize, gp.cellSize);\n        left3 = setup(\"/prisonGuard/WalkLeft3\", gp.cellSize, gp.cellSize);\n        left4 = setup(\"/prisonGuard/WalkLeft4\", gp.cellSize, gp.cellSize);\n        left5 = setup(\"/prisonGuard/WalkLeft5\", gp.cellSize, gp.cellSize);\n        right1 = setup(\"/prisonGuard/WalkRight1\", gp.cellSize, gp.cellSize);\n        right2 = setup(\"/prisonGuard/WalkRight2\", gp.cellSize, gp.cellSize);\n        right3 = setup(\"/prisonGuard/WalkRight3\", gp.cellSize, gp.cellSize);\n        right4 = setup(\"/prisonGuard/WalkRight4\", gp.cellSize, gp.cellSize);\n        right5 = setup(\"/prisonGuard/WalkRight5\", gp.cellSize, gp.cellSize);\n    }\n\n    /**\n     * Get Guards x position\n     * @return x of type int\n     */\n    public double getX(){\n        return x;\n    }\n\n    /**\n     * Get Guards y position\n     * @return y of type int\n     */\n    public double getY(){\n        return y;\n    }\n\n    /**\n     * Gets guard direction\n     * @return direction of type String\n     */\n    public String getDirection(){\n        return direction;\n    }\n\n    /**\n     * set the value for guard\n     *\n     * @param setX x value to set guards x position\n     * @param setY y value to set guards y position\n     */\n    public void setGuardValues(int setX, int setY){\n        x = setX;\n        y = setY;\n        speed = 1;\n        direction = \"default\";\n    }\n\n    /**\n     * update method is in charge of updating the position of the guard\n     * <p>\n     *     The update method in the Guard class is responsible for the movement\n     *     of the guard when the inmate comes within range of the guard. Once the inmate\n     *     is in range the guard will follow the player\n     * </p>\n     *\n     * @param xcor x coordinate of the player being passed into the method\n     * @param ycor y coordinate of the player being passed into the method\n     */\n    public void update(int xcor, int ycor) {\n        if (xcor < x) {\n            direction = \"left\";\n        }\n        else if (xcor > x) {\n            direction = \"right\";\n        }\n\n        if (xcor - x < (gp.cellSize/2) && x - xcor < (gp.cellSize/2)){\n            if (ycor < y) {\n                direction = \"up\";\n            }\n            else if (ycor > y) {\n                direction = \"down\";\n            }\n        }\n\n\n        collision = false;\n        gp.collisionCheck.wallCheck(this);\n        if (!collision) {\n            switch (direction) {\n                case \"up\":\n                    y -= speed;\n                    break;\n                case \"down\":\n                    y += speed;\n                    break;\n                case \"left\":\n                    x -= speed;\n                    break;\n                case \"right\":\n                    x += speed;\n                    break;\n            }\n        }\n\n        spriteCounter++;\n        if (spriteCounter > 20) {\n            if (spriteNum == 1) {\n                spriteNum = 2;\n            } else if (spriteNum == 2) {\n                spriteNum = 3;\n            } else if (spriteNum == 3) {\n                spriteNum = 4;\n            } else if (spriteNum == 4) {\n                spriteNum = 5;\n            } else if (spriteNum == 5) {\n                spriteNum = 1;\n            }\n            spriteCounter = 0;\n        }\n    }\n\n    /**\n     * in charge of drawing the guard and changing the guards current sprite\n     * @param g2 used for drawing the 2D sprites\n     */\n    public void draw(Graphics2D g2){\n        BufferedImage image = null;\n        switch (direction) {\n            case \"up\":\n                if (spriteNum == 1) {\n                    image = up1;\n                }\n                if (spriteNum == 2) {\n                    image = up2;\n                }\n                if (spriteNum == 3) {\n                    image = up3;\n                }\n                if (spriteNum == 4) {\n                    image = up4;\n                }\n                if (spriteNum == 5) {\n                    image = up5;\n                }\n                break;\n            case \"down\":\n                if (spriteNum == 1) {\n                    image = down1;\n                }\n                if (spriteNum == 2) {\n                    image = down2;\n                }\n                if (spriteNum == 3) {\n                    image = down3;\n                }\n                if (spriteNum == 4) {\n                    image = down4;\n                }\n                if (spriteNum == 5) {\n                    image = down5;\n                }\n                break;\n            case \"left\":\n                if (spriteNum == 1) {\n                    image = left1;\n                }\n                if (spriteNum == 2) {\n                    image = left2;\n                }\n                if (spriteNum == 3) {\n                    image = left3;\n                }\n                if (spriteNum == 4) {\n                    image = left4;\n                }\n                if (spriteNum == 5) {\n                    image = left5;\n                }\n                break;\n            case \"right\":\n                if (spriteNum == 1) {\n                    image = right1;\n                }\n                if (spriteNum == 2) {\n                    image = right2;\n                }\n                if (spriteNum == 3) {\n                    image = right3;\n                }\n                if (spriteNum == 4) {\n                    image = right4;\n                }\n                if (spriteNum == 5) {\n                    image = right5;\n                }\n                break;\n            default: break;\n\n        }\n        g2.drawImage(image, x , y, gp.cellSize, gp.cellSize, null);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/Guard.java b/src/main/java/com/group10/app/entity/Guard.java
--- a/src/main/java/com/group10/app/entity/Guard.java	(revision dcdde8ac31623e29bb1408320c15883e18b94c9b)
+++ b/src/main/java/com/group10/app/entity/Guard.java	(date 1648161242883)
@@ -35,7 +35,7 @@
         this.gp = gp;
         getGuardImage();
         setGuardValues(setX, setY);
-        solidArea = new Rectangle(0, 0, 48, 48);
+        solidArea = new Rectangle(8, 16, 32, 32);
 
         solidAreaDefaultX = solidArea.x;
         solidAreaDefaultY = solidArea.y;
Index: src/main/java/com/group10/app/entity/Entity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity;\n\nimport com.group10.app.main.GamePanel;\n\nimport javax.imageio.ImageIO;\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\nimport java.util.Objects;\n\n/**\n * Entity is the super class for all objects and characters\n * <p>\n *  This class is in charge of managing the whether there are collisions, managing the\n *  different sprite directions for the inmate and the guard, and direction management of the\n *  characters\n * </p>\n */\npublic class Entity {\n\n\n    GamePanel gp;\n\n    public BufferedImage up1, up2, up3, up4, up5, down1, down2, down3, down4, down5, left1, left2, left3, left4, left5, right1, right2, right3, right4, right5;\n    public BufferedImage door1, door2, door3, door4, door5;\n    public BufferedImage image;\n    public Rectangle solidArea = new Rectangle(0, 0, 48, 48);\n    public int solidAreaDefaultX, solidAreaDefaultY;\n    public boolean collision = false;\n\n    // States\n    public String direction = \"down\";\n\n    // Character Status\n    public String name;\n    public int speed = 2;\n\n    // Counter\n    public int disappears = 0;\n    int doorLightly = 0;\n\n    //\n    public int x, y;\n    public int spriteCounter = 0;\n    public int spriteNum = 1;\n    public int solidX, solidY;\n    //\n\n    /**\n     * The constructor for the Entity class\n     * @param gp used for building entites on the gamepanel\n     */\n    public Entity(GamePanel gp) {\n        this.gp = gp;\n    }\n\n    /**\n     * This method is in charge of changing the appearance of the main gate\n     * <p>\n     *     This method checks the whether of not the inmate had collected all the\n     *     keys for the round and then changes the appearance of the door (lessen the brightness)\n     *     of it\n     * </p>\n     * @param g2\n     */\n    public void draw(Graphics2D g2) {\n\n        int i = 25;\n\n        if (gp.inmate.hasKey == 2 + GamePanel.GAME_LEVEL){\n\n            if (Objects.equals(name, \"Door\")) {\n\n                if (doorLightly < i) {\n                    changeAlpha(g2, 0.5f);\n                    System.out.println(\"GAME_LEVEL is \" + GamePanel.GAME_LEVEL);\n                }\n                else {\n                    changeAlpha(g2, 1f);\n                }\n\n                doorLightly++;\n\n                if (doorLightly > 50){\n                    doorLightly = 0;\n                }\n            }\n        }\n\n        g2.drawImage(down1, x, y, gp.cellSize, gp.cellSize, null);\n        changeAlpha(g2, 1f);\n    }\n\n    /**\n     * The method setup is in charge of registering the image directories for the objects/characters\n     *\n     * @param imagePath\n     * @param width\n     * @param height\n     * @return image which is of type BufferedImage\n     */\n    public BufferedImage setup(String imagePath, int width, int height) {\n\n        BufferedImage image = null;\n\n        try {\n            image = ImageIO.read(Objects.requireNonNull(getClass().getResourceAsStream(imagePath + \".png\")));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        return image;\n    }\n\n    /**\n     * changes the brightness of the door based off the value of alphavalue after\n     * all keys have been collected\n     *\n     * @param g2\n     * @param alphaValue (scale factor for adjusting the brightness of the door)\n     */\n\n    public void changeAlpha(Graphics2D g2, float alphaValue) {\n        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alphaValue));\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/Entity.java b/src/main/java/com/group10/app/entity/Entity.java
--- a/src/main/java/com/group10/app/entity/Entity.java	(revision dcdde8ac31623e29bb1408320c15883e18b94c9b)
+++ b/src/main/java/com/group10/app/entity/Entity.java	(date 1647758696778)
@@ -73,7 +73,9 @@
 
                 if (doorLightly < i) {
                     changeAlpha(g2, 0.5f);
+                    
                     System.out.println("GAME_LEVEL is " + GamePanel.GAME_LEVEL);
+                    System.out.println("changeAlpha is 0.5");
                 }
                 else {
                     changeAlpha(g2, 1f);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"1c4764ef-1f4f-45aa-b74c-178f8418422a\" name=\"Changes\" comment=\"delete UtilityTool.java\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/Entity.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/Entity.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/Inmate.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/Inmate.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/group10/app/main/GamePanel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/group10/app/main/GamePanel.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"Simon\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"26UHL8Qcuyyp5M4hb5nBTkM1Z7N\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.group10.app.App\" />\n      <module name=\"Prison_Escape\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"com.group10.app.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.App\" />\n        <item itemvalue=\"Application.App\" />\n        <item itemvalue=\"Application.App\" />\n        <item itemvalue=\"Application.App\" />\n        <item itemvalue=\"Application.App\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"1c4764ef-1f4f-45aa-b74c-178f8418422a\" name=\"Changes\" comment=\"\" />\n      <created>1647471188570</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1647471188570</updated>\n      <workItem from=\"1647471190526\" duration=\"2546000\" />\n      <workItem from=\"1647473846887\" duration=\"261000\" />\n      <workItem from=\"1647474150134\" duration=\"588000\" />\n      <workItem from=\"1647543655953\" duration=\"71000\" />\n      <workItem from=\"1647543755966\" duration=\"295000\" />\n      <workItem from=\"1647544121525\" duration=\"7548000\" />\n      <workItem from=\"1647552085205\" duration=\"4429000\" />\n      <workItem from=\"1647629124932\" duration=\"212000\" />\n      <workItem from=\"1647629368156\" duration=\"727000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"fix pick up objects\">\n      <created>1647473606541</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647473606542</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"fix pick up objects\">\n      <created>1647474361140</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647474361140</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"show the score and time in WonMenu\">\n      <created>1647547581469</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647547581469</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"fix the random create object index\">\n      <created>1647548494316</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647548494316</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"fix the random create object index\">\n      <created>1647551942505</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647551942505</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"fix the guard move pictures and music\">\n      <created>1647738651524</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647738651524</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"javaDoc for Sound\">\n      <created>1647749376290</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647749376291</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"javaDoc GameDisplay\">\n      <created>1647752461311</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647752461311</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"fix the door flashes in the round 2 and 3&#10;add 50 score when collect keys\">\n      <created>1647755243840</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1647755243840</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"fix pick up objects\" />\n    <MESSAGE value=\"show the score and time in WonMenu\" />\n    <MESSAGE value=\"fix the random create object index\" />\n    <MESSAGE value=\"fix the guard move pictures and music\" />\n    <MESSAGE value=\"javaDoc for Sound\" />\n    <MESSAGE value=\"delete UtilityTool.java\" />\n    <MESSAGE value=\"javaDoc Collision checkObject\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"javaDoc Collision checkObject\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision dcdde8ac31623e29bb1408320c15883e18b94c9b)
+++ b/.idea/workspace.xml	(date 1648161678735)
@@ -4,11 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1c4764ef-1f4f-45aa-b74c-178f8418422a" name="Changes" comment="delete UtilityTool.java">
+    <list default="true" id="1c4764ef-1f4f-45aa-b74c-178f8418422a" name="Changes" comment="javaDoc GamePanel paintComponent, and all three of music">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Entity.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Entity.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Inmate.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Inmate.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/main/GamePanel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/main/GamePanel.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Guard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/Guard.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/main/Collision.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/main/Collision.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -94,6 +94,7 @@
       <workItem from="1647552085205" duration="4429000" />
       <workItem from="1647629124932" duration="212000" />
       <workItem from="1647629368156" duration="727000" />
+      <workItem from="1648160687171" duration="600000" />
     </task>
     <task id="LOCAL-00001" summary="fix pick up objects">
       <created>1647473606541</created>
@@ -158,7 +159,14 @@
       <option name="project" value="LOCAL" />
       <updated>1647755243840</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00010" summary="javaDoc GamePanel paintComponent, and all three of music">
+      <created>1647758019231</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1647758019231</updated>
+    </task>
+    <option name="localTasksCounter" value="11" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -183,6 +191,7 @@
     <MESSAGE value="javaDoc for Sound" />
     <MESSAGE value="delete UtilityTool.java" />
     <MESSAGE value="javaDoc Collision checkObject" />
-    <option name="LAST_COMMIT_MESSAGE" value="javaDoc Collision checkObject" />
+    <MESSAGE value="javaDoc GamePanel paintComponent, and all three of music" />
+    <option name="LAST_COMMIT_MESSAGE" value="javaDoc GamePanel paintComponent, and all three of music" />
   </component>
 </project>
\ No newline at end of file
