Index: src/main/java/com/group10/app/main/MouseManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.main;\r\n\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseListener;\r\nimport java.awt.event.WindowEvent;\r\n\r\nimport com.group10.app.App;\r\nimport com.group10.app.SavedData.SaveGame;\r\n\r\nimport static com.group10.app.main.GameStates.*;\r\n\r\n/**\r\n * Mouse manager will be the control for the mouse on the screen. MouseManager implements MouseListener. This class is used only for the Menu screens.\r\n * @author Ilia Fatemi\r\n */\r\npublic class MouseManager implements MouseListener{\r\n\r\n    /**\r\n     * Using the objects in GamePanel\r\n     */\r\n    GamePanel gp;\r\n\r\n    /**\r\n     * Using the saveGame when quitting or saving\r\n     */\r\n    SaveGame saveGame;\r\n\r\n    /**\r\n     * The MouseManager constructor will activate the mouse controls\r\n     * @param gp the GamePanel object\r\n     */\r\n    public MouseManager(GamePanel gp){\r\n        this.gp = gp;\r\n    }\r\n\r\n    @Override\r\n    public void mouseClicked(MouseEvent e) {}\r\n\r\n    @Override\r\n    public void mousePressed(MouseEvent e) {}\r\n\r\n    /**\r\n     * <p>The mouseReleased method will be control all the Menu screens. The mouseReleased can be used in the game to only displaye the pixel and column/row location on the console terminal</p>\r\n     */\r\n    @Override\r\n    public void mouseReleased(MouseEvent e) {\r\n        int mouseX = e.getX();\r\n        int mouseY = e.getY();\r\n        System.out.println(mouseX + \", \" + mouseY);\r\n        System.out.println(\"col: \"+mouseX/gp.cellSize + \", \" + \"row: \"+mouseY/gp.cellSize);\r\n\r\n        //Mouse control works only in main menu\r\n        if(GamePanel.state != GAME && GamePanel.state != PAUSED && GamePanel.state != GAMEWON && GamePanel.state != GAMEOVER && GamePanel.state != HELP_MENU && GamePanel.state != CREDITS_MENU){\r\n            MainMenuControls(mouseX, mouseY);\r\n        }\r\n\r\n        //Mouse control works only in help menu\r\n        if(GamePanel.state != GAME && GamePanel.state != MENU && GamePanel.state != GAMEWON && GamePanel.state != GAMEOVER && GamePanel.state != PAUSED && GamePanel.state != CREDITS_MENU){\r\n            HelpMenuControls(mouseX, mouseY);\r\n        }\r\n\r\n        //Mouse control works only in credits menu\r\n        if(GamePanel.state != GAME && GamePanel.state != MENU && GamePanel.state != GAMEWON && GamePanel.state != GAMEOVER && GamePanel.state != PAUSED && GamePanel.state != HELP_MENU){\r\n            HelpMenuControls(mouseX, mouseY);\r\n        }\r\n\r\n        //Mouse control works only in pause menu\r\n        if(GamePanel.state != GAME && GamePanel.state != MENU && GamePanel.state != GAMEWON && GamePanel.state != GAMEOVER && GamePanel.state != HELP_MENU && GamePanel.state != CREDITS_MENU){\r\n            PauseMenuControls(mouseX, mouseY);\r\n        }\r\n\r\n        //Mouse control for game won menu\r\n        if(GamePanel.state != GAME && GamePanel.state != MENU && GamePanel.state != GAMEOVER && GamePanel.state != PAUSED && GamePanel.state != HELP_MENU && GamePanel.state != CREDITS_MENU){\r\n            GameWonMenuControls(mouseX, mouseY);\r\n        }\r\n\r\n        //Mouse control for game over menu\r\n        if(GamePanel.state != GAME && GamePanel.state != MENU && GamePanel.state != GAMEWON && GamePanel.state != PAUSED && GamePanel.state != HELP_MENU && GamePanel.state != CREDITS_MENU){\r\n            GameOverMenuControls(mouseX, mouseY);\r\n        }\r\n        \r\n    }\r\n\r\n    @Override\r\n    public void mouseEntered(MouseEvent e) {}\r\n\r\n    @Override\r\n    public void mouseExited(MouseEvent e) {}\r\n\r\n    /**\r\n     * <p>MainMenuControls will only work on the main menu screen if the state of the game is GAME</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void MainMenuControls(int mouseX, int mouseY){\r\n\r\n        //new game button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 - 200 && mouseY <= gp.screenHeight/2 - 130){\r\n                System.out.println(\"Starting new game\");\r\n                GamePanel.GAME_LEVEL = 1;\r\n                gp.levelCheck();\r\n                System.out.println(\"Resetting number of keys\");\r\n                GamePanel.state = GAME;\r\n            }\r\n        }\r\n\r\n        //Continue button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 - 100 && mouseY <= gp.screenHeight/2 - 30){\r\n                System.out.println(\"Continuing game\");\r\n                GamePanel.state = GAME;\r\n                gp.loadGame.loadData(\"test.txt\");\r\n                System.out.println(\"loading Complete\");\r\n\r\n                gp.music.playMusic(8);\r\n            }\r\n        }\r\n\r\n        //Help button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 && mouseY <= gp.screenHeight/2 + 70){\r\n                System.out.println(\"Help display\");\r\n                GamePanel.state = HELP_MENU;\r\n            }\r\n        }\r\n\r\n        //Credits Button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 + 100 && mouseY <= gp.screenHeight/2 + 170){\r\n                System.out.println(\"Credits display\");\r\n                gp.setState(CREDITS_MENU);\r\n            }\r\n        }\r\n\r\n        //Exit game button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 + 200 && mouseY <= gp.screenHeight/2 + 270){\r\n                //Close the screen\r\n                System.out.println(\"Exiting game\");\r\n                App.window.dispatchEvent(new WindowEvent(App.window, WindowEvent.WINDOW_CLOSING));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>HelpMenuControls will only work on the main menu screen if the state of the game is MENU</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void HelpMenuControls(int mouseX, int mouseY){\r\n        //Return to menu button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 + 350 && mouseY <= gp.screenHeight/2 + 398){\r\n                //Close the screen\r\n                System.out.println(\"return to main menu\");\r\n                GamePanel.state = MENU;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>HelpMenuControls will only work on the main menu screen if the state of the game is MENU</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void CreditsMenuControls(int mouseX, int mouseY){\r\n        //Return to menu button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 + 350 && mouseY <= gp.screenHeight/2 + 398){\r\n                //Close the screen\r\n                System.out.println(\"return to main menu\");\r\n                GamePanel.state = MENU;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>PauseMenuControls will only work on the pause menu screen if the state of the game is PAUSE</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void PauseMenuControls(int mouseX, int mouseY){\r\n        //Resume button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(103)){\r\n            if(mouseY >= gp.screenHeight/2 - 130 && mouseY <= gp.screenHeight/2-60){\r\n                System.out.println(\"resuming game\");\r\n                GamePanel.state = GAME;\r\n            }\r\n        }\r\n        //return to main menu controls\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(103)){\r\n            if(mouseY >= gp.screenHeight/2 + 70 && mouseY <= gp.screenHeight/2 + 140){\r\n                gp.saveGame.mySave(\"test.txt\");\r\n                System.out.println(\"returning to Main menu\");\r\n                GamePanel.state = MENU;\r\n\r\n                gp.music.playMusic(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>GameWonMenuControls will only work on the Winning menu screen if the state of the game is GAMEWON</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void GameWonMenuControls(int mouseX, int mouseY){\r\n        //next level button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2-130 && mouseY <= gp.screenHeight/2-60){\r\n                System.out.println(\"Next level\");\r\n                GamePanel.GAME_LEVEL++;\r\n                System.out.println(\"(Update) Level: \"+ GamePanel.GAME_LEVEL);\r\n                if(GamePanel.GAME_LEVEL > 3){\r\n                    GamePanel.GAME_LEVEL = 1;\r\n                    GamePanel.state = CREDITS_MENU;\r\n                }else{\r\n                    gp.levelCheck();\r\n                }\r\n\r\n                gp.music.playMusic(8);\r\n            }\r\n        }\r\n\r\n        //return to main menu button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 - 30 && mouseY <= gp.screenHeight/2 + 40){\r\n                GamePanel.GAME_LEVEL++;\r\n                System.out.println(\"(Update) Level: \"+GamePanel.GAME_LEVEL);\r\n                gp.levelCheck();\r\n                gp.saveGame.mySave(\"test.txt\");\r\n                System.out.println(mouseX + \" \"+ mouseY + \": returning to Main menu\");\r\n                GamePanel.state = MENU;\r\n\r\n                gp.music.playMusic(0);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>GameOverMenuControls will only work on the gamae over menu screen if the state of the game is GAMEOVER</p>\r\n     * @param mouseX integer location for mouse X position\r\n     * @param mouseY integer location for mouse Y position\r\n     */\r\n    public void GameOverMenuControls(int mouseX, int mouseY){\r\n        //Retry level button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2-130 && mouseY <= gp.screenHeight/2-60){\r\n                System.out.println(\"Retry Level\");\r\n                gp.levelCheck();\r\n                GamePanel.state = GAME;\r\n\r\n                gp.music.playMusic(8);\r\n            }\r\n        }\r\n\r\n        //return to main menu button\r\n        if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){\r\n            if(mouseY >= gp.screenHeight/2 - 30 && mouseY <= gp.screenHeight/2 + 40){\r\n                System.out.println(\"returning to Main menu\");\r\n                gp.levelCheck();\r\n                gp.saveGame.mySave(\"test.txt\");\r\n                GamePanel.state = MENU;\r\n\r\n                gp.music.playMusic(0);\r\n            }   \r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/MouseManager.java b/src/main/java/com/group10/app/main/MouseManager.java
--- a/src/main/java/com/group10/app/main/MouseManager.java	(revision 27334073fa1a4b6b2b831cf5e1f8656ab165f6b0)
+++ b/src/main/java/com/group10/app/main/MouseManager.java	(date 1649728364797)
@@ -98,7 +98,7 @@
         if(mouseX >= gp.screenWidth/2-103 && mouseX <= gp.screenWidth/2+(106)){
             if(mouseY >= gp.screenHeight/2 - 200 && mouseY <= gp.screenHeight/2 - 130){
                 System.out.println("Starting new game");
-                GamePanel.GAME_LEVEL = 1;
+                GamePanel.GAME_LEVEL = 2;
                 gp.levelCheck();
                 System.out.println("Resetting number of keys");
                 GamePanel.state = GAME;
Index: src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity.nonStaticEntities;\r\n\r\n\r\nimport com.group10.app.main.GamePanel;\r\n\r\n/**\r\n * The guard class in charge of the Guard implementation\r\n *\r\n * <p>\r\n *     This class implements the guard functionality for the game\r\n *     manages the guards movements, interactions, drawing the sprites and\r\n *     changing them with the guards movements.\r\n * </p>\r\n *\r\n */\r\npublic class Guard extends MovingActor {\r\n    GamePanel gp;\r\n    boolean moving = false;\r\n    int pixelCounter = 0;\r\n    boolean alerted = false;\r\n\r\n    /**\r\n     * The constructor for the Guard class...\r\n     *\r\n     * <p>\r\n     * Default setting include: direction = down\r\n     * speed = 1\r\n     * SolidArea(8, 16, 32, 32)\r\n     * Get guard's images\r\n     * </p>\r\n     *\r\n     * @param gp main game panel\r\n     */\r\n    public Guard(GamePanel gp) {\r\n        super(gp);\r\n        this.gp = gp;\r\n\r\n        setDirection(\"down\");\r\n        setSpeed(1);\r\n\r\n        getGuardImage();\r\n    }\r\n\r\n    /**\r\n     * getGuardImage method is in charge of registering the image directories for the guard enemy\r\n     */\r\n    public void getGuardImage() {\r\n        up1 = setup(\"/prisonGuard/WalkUp1\");\r\n        up2 = setup(\"/prisonGuard/WalkUp2\");\r\n        up3 = setup(\"/prisonGuard/WalkUp3\");\r\n        down1 = setup(\"/prisonGuard/WalkDown1\");\r\n        down2 = setup(\"/prisonGuard/WalkDown2\");\r\n        down3 = setup(\"/prisonGuard/WalkDown3\");\r\n        left1 = setup(\"/prisonGuard/WalkLeft1\");\r\n        left2 = setup(\"/prisonGuard/WalkLeft2\");\r\n        left3 = setup(\"/prisonGuard/WalkLeft3\");\r\n        right1 = setup(\"/prisonGuard/WalkRight1\");\r\n        right2 = setup(\"/prisonGuard/WalkRight2\");\r\n        right3 = setup(\"/prisonGuard/WalkRight3\");\r\n    }\r\n\r\n    /**\r\n     * set the value for guard\r\n     *\r\n     * @param x value to set guards x position\r\n     * @param y value to set guards y position\r\n     */\r\n    public void setGuardValues(int x, int y) {\r\n        setX(x);\r\n        setY(y);\r\n        setSpeed(1);\r\n        moving = false;\r\n        setDirection(\"default\");\r\n    }\r\n\r\n    /**\r\n     * Decides if the inmate is close enough for the guard to be in an alerted state\r\n     * <p>\r\n     *     Checks if the inmate is within a certain radius of the guard in order for\r\n     *     the guard to be alerted of the inmate's presence and follow him.\r\n     * </p>\r\n     */\r\n    public void GuardAlerted() {\r\n        if (((gp.inmate.getX() - getX()) < 200) && ((gp.inmate.getY() - getY()) < 200)) {\r\n            alerted = true;\r\n        } else {\r\n            alerted = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update method is in charge of updating the position of the guard\r\n     * <p>\r\n     * The update method in the Guard class is responsible for the movement\r\n     * of the guard when the inmate comes within range of the guard. Once the inmate\r\n     * is in range the guard will follow the player\r\n     * </p>\r\n     */\r\n    public void update() {\r\n        GuardAlerted();\r\n        if (alerted) {\r\n            if (!moving) {\r\n                if (gp.inmate.getX() < getX()) {\r\n                    setDirection(\"left\");\r\n                } else if (gp.inmate.getX() > getX()) {\r\n                    setDirection(\"right\");\r\n                }\r\n\r\n                if (Math.abs(gp.inmate.getX() - getX()) < gp.cellSize) {\r\n                    if (gp.inmate.getY() < getY()) {\r\n                        setDirection(\"up\");\r\n                    } else if (gp.inmate.getY() > getY()) {\r\n                        setDirection(\"down\");\r\n                    }\r\n                }\r\n\r\n                moving = true;\r\n            }\r\n\r\n            collision = false;\r\n            gp.collisionCheck.wallCheck(this);\r\n\r\n            collisionUpdate();\r\n            spriteUpdate();\r\n\r\n            pixelCounter += getSpeed();\r\n\r\n            if (pixelCounter == 48) {\r\n                moving = false;\r\n                pixelCounter = 0;\r\n            }\r\n        } else {\r\n            String currentDirection = getDirection();\r\n            collision = false;\r\n            gp.collisionCheck.wallCheck(this);\r\n\r\n            collisionUpdate();\r\n            if(collision){\r\n                if(getDirection() == \"left\"){\r\n                    setDirection(\"right\");\r\n                }\r\n                else if(getDirection() == \"right\"){\r\n                    setDirection(\"left\");\r\n                }\r\n                else if(getDirection() == \"up\"){\r\n                    setDirection(\"down\");\r\n                }\r\n                else if(getDirection() == \"down\"){\r\n                    setDirection(\"up\");\r\n                }\r\n                spriteUpdate();\r\n\r\n                pixelCounter += getSpeed();\r\n\r\n                if (pixelCounter == 48) {\r\n                    moving = false;\r\n                    pixelCounter = 0;\r\n                }\r\n            }\r\n            else{\r\n                setDirection(currentDirection);\r\n                spriteUpdate();\r\n\r\n                pixelCounter += getSpeed();\r\n\r\n                if (pixelCounter == 48) {\r\n                    moving = false;\r\n                    pixelCounter = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java b/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java
--- a/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java	(revision 27334073fa1a4b6b2b831cf5e1f8656ab165f6b0)
+++ b/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java	(date 1649728719685)
@@ -88,6 +88,17 @@
         }
     }
 
+    public void spritePixelUpdate() {
+        spriteUpdate();
+
+        pixelCounter += getSpeed();
+
+        if (pixelCounter == 48) {
+            moving = false;
+            pixelCounter = 0;
+        }
+    }
+
     /**
      * update method is in charge of updating the position of the guard
      * <p>
@@ -121,21 +132,14 @@
             gp.collisionCheck.wallCheck(this);
 
             collisionUpdate();
-            spriteUpdate();
-
-            pixelCounter += getSpeed();
-
-            if (pixelCounter == 48) {
-                moving = false;
-                pixelCounter = 0;
-            }
+            spritePixelUpdate();
         } else {
             String currentDirection = getDirection();
             collision = false;
-            gp.collisionCheck.wallCheck(this);
-
             collisionUpdate();
-            if(collision){
+            gp.collisionCheck.wallCheck(this);
+//            collisionUpdate();
+            if (collision){
                 if(getDirection() == "left"){
                     setDirection("right");
                 }
@@ -148,25 +152,11 @@
                 else if(getDirection() == "down"){
                     setDirection("up");
                 }
-                spriteUpdate();
-
-                pixelCounter += getSpeed();
-
-                if (pixelCounter == 48) {
-                    moving = false;
-                    pixelCounter = 0;
-                }
+                spritePixelUpdate();
             }
             else{
                 setDirection(currentDirection);
-                spriteUpdate();
-
-                pixelCounter += getSpeed();
-
-                if (pixelCounter == 48) {
-                    moving = false;
-                    pixelCounter = 0;
-                }
+                spritePixelUpdate();
             }
         }
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f755bbd9-5576-40b5-aa48-625a9f44f768\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"27aO4ypAnlwhOQ5qHrXFIBE6oyg\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Modules\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.group10.app.App\" />\r\n      <module name=\"Prison_Escape\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.group10.app.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.App\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f755bbd9-5576-40b5-aa48-625a9f44f768\" name=\"Changes\" comment=\"\" />\r\n      <created>1649554542755</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1649554542755</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 27334073fa1a4b6b2b831cf5e1f8656ab165f6b0)
+++ b/.idea/workspace.xml	(date 1649728918830)
@@ -7,6 +7,7 @@
     <list default="true" id="f755bbd9-5576-40b5-aa48-625a9f44f768" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/entity/nonStaticEntities/Guard.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/com/group10/app/main/MouseManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/group10/app/main/MouseManager.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
