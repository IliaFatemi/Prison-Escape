Index: src/main/java/com/group10/app/entity/Entity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity;\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\n\npublic class Entity {\n    public int x, y;\n    public int speed;\n\n    public BufferedImage up1, up2, up3, down1, down2, down3, left1, left2, left3, right1, right2, right3;\n    public String direction;\n\n    public int spriteCounter = 0;\n    public int spriteNum = 1;\n\n    public Rectangle solidArea;\n    public int solidX, solidY;\n    public boolean collision = false;\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/Entity.java b/src/main/java/com/group10/app/entity/Entity.java
--- a/src/main/java/com/group10/app/entity/Entity.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/entity/Entity.java	(date 1647225525021)
@@ -1,20 +1,61 @@
 package com.group10.app.entity;
 
+import com.group10.app.main.GamePanel;
+import com.group10.app.main.UtilityTool;
+
+import javax.imageio.ImageIO;
 import java.awt.*;
 import java.awt.image.BufferedImage;
+import java.io.IOException;
 
 public class Entity {
-    public int x, y;
-    public int speed;
 
+    GamePanel gp;
     public BufferedImage up1, up2, up3, down1, down2, down3, left1, left2, left3, right1, right2, right3;
-    public String direction;
+    public BufferedImage image;
+    public Rectangle solidArea = new Rectangle(0, 0, 48, 48);
+    public int solidAreaDefaultX, solidAreaDefaultY;
+    public boolean collision = false;
+
+    // State
+    public int worldX, worldY;
+    public String direction = "down";
 
+    // Character Status
+    public String name;
+    public int speed;
+
+    // Type
+    public int type;
+
+    //
+    public int x, y;
     public int spriteCounter = 0;
     public int spriteNum = 1;
-
-    public Rectangle solidArea;
     public int solidX, solidY;
-    public boolean collision = false;
+    //
+
+    public Entity(GamePanel gp) {
+        this.gp = gp;
+    }
+
+    public void draw(Graphics2D g2) {
+        g2.drawImage(down1, x, y, gp.cellSize, gp.cellSize, null);
+    }
+
+    public BufferedImage setup(String imagePath, int width, int height) {
+
+        UtilityTool uTool = new UtilityTool();
+        BufferedImage image = null;
+
+        try {
+            image = ImageIO.read(getClass().getResourceAsStream(imagePath + ".png"));
+            image = uTool.scaleImage(image, width, height);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        return image;
+    }
 
 }
Index: src/main/java/com/group10/app/entity/Inmate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity;\n\nimport com.group10.app.main.GamePanel;\nimport com.group10.app.main.KeyManager;\n\nimport javax.imageio.ImageIO;\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.io.IOException;\n\n\n\npublic class Inmate extends Entity{\n    GamePanel gp;\n    KeyManager keyH;\n    public int hasKey = 0;\n    public int score = 0;\n    public double time = 100;\n\n    public Inmate(GamePanel gp, KeyManager keyH){\n        this.gp = gp;\n        this.keyH = keyH;\n\n        solidArea = new Rectangle(8, 16, 32, 32);\n        solidArea.x = 8;\n        solidArea.y = 8;\n        solidX = solidArea.x;\n        solidY = solidArea.y;\n        solidArea.width = 32;\n        solidArea.height = 32;\n\n        solidX = 8;\n        solidY = 16;\n\n        setInmateValues();\n        getInmateImage();\n    }\n\n    public void setInmateValues(){\n        x = 100;\n        y = 100;\n        speed = 3;\n        direction = \"down\";\n    }\n\n    \n    public void getInmateImage(){\n        try{\n            up1 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkUp1.png\"));\n            up2 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkUp2.png\"));\n            up3 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkUp3.png\"));\n            down1 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkDown1.png\"));\n            down2 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkDown2.png\"));\n            down3 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkDown3.png\"));\n            left1 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkLeft1.png\"));\n            left2 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkLeft2.png\"));\n            left3 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkLeft3.png\"));\n            right1 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkRight1.png\"));\n            right2 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkRight2.png\"));\n            right3 = ImageIO.read(getClass().getResourceAsStream(\"/inmate/walkRight3.png\"));\n\n        }catch(IOException e){\n            e.printStackTrace();\n        }\n    }\n\n    public void update(){\n        if(keyH.pressedUp|| keyH.pressedDown || keyH.pressedLeft || keyH.pressedRight || keyH.pressedEscape) {\n            if (keyH.pressedUp) {\n                direction = \"up\";\n                y -= speed;\n            } else if (keyH.pressedDown) {\n                direction = \"down\";\n                y += speed;\n            } else if (keyH.pressedLeft) {\n                direction = \"left\";\n                x -= speed;\n            } else if (keyH.pressedRight) {\n                direction = \"right\";\n                x += speed;\n            }\n\n            int objectIndex = gp.collisionCheck.checkObject(this, true);\n            pickUpObject(objectIndex);\n\n            spriteCounter++;\n            if (spriteCounter > 11) {\n                if (spriteNum == 1) {\n                    spriteNum = 2;\n                } else if (spriteNum == 2) {\n                    spriteNum = 3;\n                } else if (spriteNum == 3) {\n                    spriteNum = 1;\n                }\n                spriteCounter = 0;\n            }\n        }\n    }\n\n    //Get the x position of the player\n    public double getX(){return x;}\n\n    //Get the Y position of the player\n    public double getY(){return y;}\n\n    //Get player speed\n    public double getSpeed(){return speed;}\n\n    //Get player direction\n    public String getDirection(){return direction;}\n\n    //set player position\n    public void setPos(int posX, int posY){x = posX; y = posY;}\n\n    //set player speed\n    public void setSpeed(int newSpeed){speed = newSpeed;}\n\n    //set players direction\n    public void setDirection(String newDir){direction = newDir;}\n\n    //Setting the players position in the oposite direction\n    public void revertPosition(String pos){\n        if(pos == \"down\"){\n            y *= -1;\n            if(y >= 0){\n                y -= 1;\n            }\n            else{\n                y += 1;\n            }\n        }\n        else if(pos == \"up\"){\n            y *= -1;\n            if(y >= 0){\n                y -= 100;\n            }\n            else{\n                y += 100;\n            }\n        }\n        else if(pos == \"left\"){\n            x *= -1;\n            if(x >= 0){\n                x -= 100;\n            }\n            else{\n                x += 100;\n            }\n        } \n        else if(pos == \"right\"){\n            x *= -1;\n            if(x >= 0){\n                x -= 1;\n            }\n            else{\n                x += 1;\n            }\n        }\n    }\n\n    public void pickUpObject (int i) {\n\n        if (i != 999){\n\n            String objectName = gp.obj[i].name;\n\n            switch (objectName){\n                case \"Key\":\n                    gp.playSE(1);\n                    hasKey++;\n                    gp.obj[i] = null;\n                    break;\n                case \"Timer\":\n                    gp.playSE(2);\n                    time += 20;\n                    gp.obj[i] = null;\n                    break;\n                case \"Chicken\":\n                    gp.playSE(3);\n                    score += 100;\n                    gp.obj[i] = null;\n                    break;\n                case \"Trap\":\n                    gp.playSE(4);\n                    score -= 50;\n                    gp.obj[i] = null;\n                    break;\n            }\n        }\n    }\n\n    public void draw(Graphics2D g2){\n        BufferedImage image = null;\n        switch (direction){\n            case \"up\":\n                if(spriteNum == 1){\n                    image = up1;\n                }\n                if(spriteNum == 2){\n                    image = up2;\n                }\n                if(spriteNum == 3){\n                    image = up3;\n                }\n                break;\n            case \"down\":\n                if(spriteNum == 1){\n                    image = down1;\n                }\n                if(spriteNum == 2){\n                    image = down2;\n                }\n                if(spriteNum == 3){\n                    image = down3;\n                }\n                break;\n            case \"left\":\n                if(spriteNum == 1){\n                    image = left1;\n                }\n                if(spriteNum == 2){\n                    image = left2;\n                }\n                if(spriteNum == 3){\n                    image = left3;\n                }\n                break;\n            case \"right\":\n                if(spriteNum == 1){\n                    image = right1;\n                }\n                if(spriteNum == 2){\n                    image = right2;\n                }\n                if(spriteNum == 3){\n                    image = right3;\n                }\n                break;\n        }\n\n        g2.drawImage(image, x , y, gp.cellSize, gp.cellSize, null);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/Inmate.java b/src/main/java/com/group10/app/entity/Inmate.java
--- a/src/main/java/com/group10/app/entity/Inmate.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/entity/Inmate.java	(date 1647226439712)
@@ -8,8 +8,6 @@
 import java.awt.image.BufferedImage;
 import java.io.IOException;
 
-
-
 public class Inmate extends Entity{
     GamePanel gp;
     KeyManager keyH;
@@ -18,6 +16,7 @@
     public double time = 100;
 
     public Inmate(GamePanel gp, KeyManager keyH){
+        super(gp);
         this.gp = gp;
         this.keyH = keyH;
 
@@ -168,24 +167,24 @@
                 case "Key":
                     gp.playSE(1);
                     hasKey++;
-                    gp.obj[i] = null;
                     break;
                 case "Timer":
                     gp.playSE(2);
                     time += 20;
-                    gp.obj[i] = null;
                     break;
                 case "Chicken":
                     gp.playSE(3);
                     score += 100;
-                    gp.obj[i] = null;
                     break;
                 case "Trap":
                     gp.playSE(4);
                     score -= 50;
-                    gp.obj[i] = null;
                     break;
             }
+
+            String text = "Got a " + gp.obj[i].name + "!";
+            gp.obj[i] = null;
+            gp.ui.addMessage(text);
         }
     }
 
Index: src/main/java/com/group10/app/main/GamePanel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.main;\n\nimport com.group10.app.entity.Inmate;\nimport com.group10.app.entity.Gaurd;\nimport com.group10.app.objects.SuperObject;\nimport com.group10.app.objects.TileManager;\nimport com.group10.app.objects.WallManager;\n\nimport com.group10.app.MenuPanel.MenuScreen;\nimport com.group10.app.MenuPanel.PauseMenu;\n\nimport static java.lang.Math.*;\n\nimport javax.swing.*;\nimport java.awt.*;\n\npublic class GamePanel extends JPanel implements Runnable{\n   \n    // Screen size settings\n    final int originalCellSize = 16;\n    final int scaleFactor = 3;\n    public final int cellSize = originalCellSize * scaleFactor; //48x48 cells\n    public final int screenColNumber = 25;\n    public final int screenRowNumber = 15;\n    public final int screenWidth = cellSize * screenColNumber;//1920 pixels\n    public final int screenHeight = cellSize * screenRowNumber;//1080 pixels\n\n    final int framePerSecond = 60;\n\n    //The distance where the player and enemy will colide at\n    int ENEMY_COLLISION_DISTANCE = 40;\n\n    //Set up the keyboard keys\n    KeyManager keyH = new KeyManager();\n\n    //Set up the Mouse Keys\n    MouseManager mouseK = new MouseManager(this);\n\n    Thread gameThread;\n\n    //setup the tiles\n    TileManager tileManage = new TileManager(this);\n\n    //setup the walls\n    WallManager wallmanager = new WallManager(this);\n\n    //set player default position\n    public Inmate inmate = new Inmate(this, keyH);\n\n    //set gaurds position\n    Gaurd gaurd = new Gaurd(this, 200, 200);\n\n    //Set up the main menu screen \n    MenuScreen mainMenu = new MenuScreen(this);\n\n    //set up the pause menu\n    PauseMenu pauseMenu = new PauseMenu(this, keyH);\n    \n    // Create object array;\n    public SuperObject obj[] = new SuperObject[10];\n    \n    // Set up asset;\n    public AssetSetter asset = new AssetSetter(this);\n    \n    // Set up collision check;\n    public Collision collisionCheck = new Collision(this);\n\n    // Set up UI\n    public UI ui = new UI(this);\n\n    // Set up music and sound effect\n    Sound music = new Sound();\n    Sound soundEffect = new Sound();\n\n    public static enum STATE{MENU, GAME, EXIT, PAUSED}\n    public static STATE state = STATE.MENU;\n\n    public GamePanel(){\n        this.setPreferredSize(new Dimension(screenWidth, screenHeight));\n        this.setBackground(Color.black);\n        this.setDoubleBuffered(true);\n        this.addMouseListener(mouseK);\n        this.addKeyListener(keyH);\n        this.setFocusable(true);\n    }\n\n    public void setUpAsset() {\n\n        asset.setObject();\n        playMusic(0);\n\n    }\n\n    public void startGameThread(){\n            gameThread = new Thread(this);\n            gameThread.start();\n    }\n\n    \n    //Setting up collision between two objects.This function takes two perameters as turtles. \n    //Input: (Inmate:Obj, ObjectX: int, ObjectY: int: collision_type:int)   \n    public boolean isCollision(Inmate inmate, double objectX, double objectY, int collision_type){   \n        double distance = sqrt(pow(inmate.getX() - objectX, 2) + pow(inmate.getY() - objectY, 2));\n        //System.out.println(distance);\n            if (distance <= collision_type){\n                return true;\n            }\n            return false;\n    }\n\n    //Checking the boundary for the player\n    //If player steps out of the screen area, the function will return true\n    public boolean isBoundary(Inmate inmate){\n        if(inmate.getX() > screenWidth-2*cellSize || inmate.getX() < 0 + cellSize || inmate.getY() > screenHeight-2*cellSize || inmate.getY() < 0 + cellSize){\n            return true;\n        }\n        return false;\n    }\n\n    public void run() {\n        double drawInterval = 1000000000/ framePerSecond;\n        double nextDrawTime = System.nanoTime() + drawInterval;\n\n        while(gameThread != null){\n            \n            //render graphics\n            repaint();\n\n            //Pause the game if pause menu is active\n            if(state != STATE.PAUSED){\n                update();\n                //Testing for collision detection with a gaurd\n                if (isCollision(inmate, gaurd.getX(), gaurd.getY(), ENEMY_COLLISION_DISTANCE)){\n                    System.out.println(\"ENEMY COLLIDED\");\n                    System.out.println(\"===================================\");\n                }\n    \n                //Testing collision with border boundary\n                if (isBoundary(inmate)){\n                    System.out.println(\"BOUNDARY COLLLISION\");\n                    System.out.println(\"===================================\");\n                    inmate.revertPosition(inmate.getDirection());\n                }\n    \n                try {\n                    double remainingTime = nextDrawTime - System.nanoTime();\n                    remainingTime /= 1000000;\n    \n                    if(remainingTime < 0){\n                        remainingTime = 0;\n                    }\n    \n                    Thread.sleep((long) remainingTime);\n    \n                    nextDrawTime += drawInterval;\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    public void update(){\n        inmate.update();\n    }\n\n    public void paintComponent(Graphics graphic){\n        super.paintComponent(graphic);\n        Graphics2D g2 = (Graphics2D) graphic;\n        \n        if (state == STATE.GAME){\n    \n            //draw tiles\n            tileManage.draw(g2);\n\n            //I think at this stage if any bug occures, best way to face the challenge\n            //is to take 5 deep breaths, masturbate in the washroom, then return to work. \n            //If not found effective, try 5 more times then report the results.\n    \n            //draw walls\n            wallmanager.drawBoarder(g2);\n\n            // Draw objects\n            for (int i = 0; i < obj.length; i++){\n                if (obj[i] != null){\n                    obj[i].draw(g2, this);\n                }\n            }\n    \n            //Draw gaurd\n            gaurd.draw(g2, this);\n    \n            //Draw the inmate\n            inmate.draw(g2);\n\n            // Draw UI\n            ui.draw(g2);\n\n            g2.dispose();\n            \n        }\n        else if(state == STATE.PAUSED){\n            pauseMenu.renderPauseMenu(g2);\n            g2.dispose();\n        }\n        else{\n            //Render the main menu\n            mainMenu.renderMain(g2);\n            g2.dispose();\n        }\n    }\n\n    public void playMusic (int i) {\n\n        music.setFile(i);\n        music.play();\n        music.loop();\n\n    }\n\n    public void stopMusic () {\n        music.stop();\n    }\n\n    public void playSE(int i) {\n\n        soundEffect.setFile(i);\n        soundEffect.play();\n\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/GamePanel.java b/src/main/java/com/group10/app/main/GamePanel.java
--- a/src/main/java/com/group10/app/main/GamePanel.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/main/GamePanel.java	(date 1647226748150)
@@ -1,8 +1,8 @@
 package com.group10.app.main;
 
+import com.group10.app.entity.Entity;
 import com.group10.app.entity.Inmate;
 import com.group10.app.entity.Gaurd;
-import com.group10.app.objects.SuperObject;
 import com.group10.app.objects.TileManager;
 import com.group10.app.objects.WallManager;
 
@@ -57,7 +57,7 @@
     PauseMenu pauseMenu = new PauseMenu(this, keyH);
     
     // Create object array;
-    public SuperObject obj[] = new SuperObject[10];
+    public Entity[] obj = new Entity[20];
     
     // Set up asset;
     public AssetSetter asset = new AssetSetter(this);
@@ -183,7 +183,7 @@
             // Draw objects
             for (int i = 0; i < obj.length; i++){
                 if (obj[i] != null){
-                    obj[i].draw(g2, this);
+                    obj[i].draw(g2);
                 }
             }
     
Index: src/main/java/com/group10/app/main/AssetSetter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.main;\n\nimport com.group10.app.objects.ObjChicken;\nimport com.group10.app.objects.ObjKey;\nimport com.group10.app.objects.ObjTimer;\nimport com.group10.app.objects.ObjTrap;\n\npublic class AssetSetter {\n\n    GamePanel gp;\n\n    public AssetSetter(GamePanel gp){\n        this.gp = gp;\n\n    }\n\n    public void setObject(){\n\n        gp.obj[0] = new ObjKey();\n        gp.obj[0].x = 11 * gp.cellSize;\n        gp.obj[0].y = 7 * gp.cellSize;\n\n        gp.obj[1] = new ObjKey();\n        gp.obj[1].x = 15 * gp.cellSize;\n        gp.obj[1].y = 7 * gp.cellSize;\n\n        gp.obj[2] = new ObjKey();\n        gp.obj[2].x = 10 * gp.cellSize;\n        gp.obj[2].y = 10 * gp.cellSize;\n\n        gp.obj[3] = new ObjTimer();\n        gp.obj[3].x = 15 * gp.cellSize;\n        gp.obj[3].y = 3 * gp.cellSize;\n\n        gp.obj[4] = new ObjTimer();\n        gp.obj[4].x = 5 * gp.cellSize;\n        gp.obj[4].y = 10 * gp.cellSize;\n\n        gp.obj[5] = new ObjChicken();\n        gp.obj[5].x = 8 * gp.cellSize;\n        gp.obj[5].y = 11 * gp.cellSize;\n\n        gp.obj[6] = new ObjChicken();\n        gp.obj[6].x = 17 * gp.cellSize;\n        gp.obj[6].y = 2 * gp.cellSize;\n\n        gp.obj[7] = new ObjTrap();\n        gp.obj[7].x = 17 * gp.cellSize;\n        gp.obj[7].y = 9 * gp.cellSize;\n\n    }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/AssetSetter.java b/src/main/java/com/group10/app/main/AssetSetter.java
--- a/src/main/java/com/group10/app/main/AssetSetter.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/main/AssetSetter.java	(date 1647226748143)
@@ -1,5 +1,6 @@
 package com.group10.app.main;
 
+import com.group10.app.entity.Entity;
 import com.group10.app.objects.ObjChicken;
 import com.group10.app.objects.ObjKey;
 import com.group10.app.objects.ObjTimer;
@@ -8,6 +9,7 @@
 public class AssetSetter {
 
     GamePanel gp;
+    int objIndex = 0;
 
     public AssetSetter(GamePanel gp){
         this.gp = gp;
@@ -16,38 +18,19 @@
 
     public void setObject(){
 
-        gp.obj[0] = new ObjKey();
-        gp.obj[0].x = 11 * gp.cellSize;
-        gp.obj[0].y = 7 * gp.cellSize;
-
-        gp.obj[1] = new ObjKey();
-        gp.obj[1].x = 15 * gp.cellSize;
-        gp.obj[1].y = 7 * gp.cellSize;
-
-        gp.obj[2] = new ObjKey();
-        gp.obj[2].x = 10 * gp.cellSize;
-        gp.obj[2].y = 10 * gp.cellSize;
-
-        gp.obj[3] = new ObjTimer();
-        gp.obj[3].x = 15 * gp.cellSize;
-        gp.obj[3].y = 3 * gp.cellSize;
-
-        gp.obj[4] = new ObjTimer();
-        gp.obj[4].x = 5 * gp.cellSize;
-        gp.obj[4].y = 10 * gp.cellSize;
+        createObj(new ObjKey(gp), 11, 7);
+        createObj(new ObjKey(gp), 13, 7);
+        createObj(new ObjChicken(gp), 15, 6);
+        createObj(new ObjTimer(gp), 18, 6);
+        createObj(new ObjTrap(gp), 16, 10);
 
-        gp.obj[5] = new ObjChicken();
-        gp.obj[5].x = 8 * gp.cellSize;
-        gp.obj[5].y = 11 * gp.cellSize;
+    }
 
-        gp.obj[6] = new ObjChicken();
-        gp.obj[6].x = 17 * gp.cellSize;
-        gp.obj[6].y = 2 * gp.cellSize;
-
-        gp.obj[7] = new ObjTrap();
-        gp.obj[7].x = 17 * gp.cellSize;
-        gp.obj[7].y = 9 * gp.cellSize;
-
+    public void createObj(Entity entity, int worldX, int worldY) {
+        gp.obj[objIndex] = entity;
+        gp.obj[objIndex].x = gp.cellSize * worldX;
+        gp.obj[objIndex].y = gp.cellSize * worldY;
+        objIndex++;
     }
 }
 
Index: src/main/java/com/group10/app/objects/ObjTimer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.objects;\n\nimport javax.imageio.ImageIO;\nimport java.io.IOException;\n\npublic class ObjTimer extends SuperObject {\n\n    public ObjTimer(){\n\n        name = \"Timer\";\n\n        try {\n            image = ImageIO.read((getClass().getResourceAsStream(\"/collectibles/timer.png\")));\n\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/objects/ObjTimer.java b/src/main/java/com/group10/app/objects/ObjTimer.java
--- a/src/main/java/com/group10/app/objects/ObjTimer.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/objects/ObjTimer.java	(date 1647224840139)
@@ -1,20 +1,15 @@
 package com.group10.app.objects;
 
-import javax.imageio.ImageIO;
-import java.io.IOException;
+import com.group10.app.entity.Entity;
+import com.group10.app.main.GamePanel;
 
-public class ObjTimer extends SuperObject {
+public class ObjTimer extends Entity {
 
-    public ObjTimer(){
+    public ObjTimer(GamePanel gp){
+        super(gp);
 
         name = "Timer";
-
-        try {
-            image = ImageIO.read((getClass().getResourceAsStream("/collectibles/timer.png")));
-
-        }catch (IOException e){
-            e.printStackTrace();
-        }
+        down1 = setup("/collectibles/timer", gp.cellSize, gp.cellSize);
     }
 
 }
Index: src/main/java/com/group10/app/main/UI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.main;\n\nimport com.group10.app.objects.ObjKey;\n\nimport java.awt.*;\nimport java.awt.image.BufferedImage;\nimport java.text.DecimalFormat;\n\npublic class UI {\n\n    GamePanel gp;\n    Font arial_40, arial_80B;\n    BufferedImage keyImage;\n    public boolean messageOn = false;\n    public String message = \"\";\n    int messageCounter = 0;\n    public boolean gameFinished = false;\n\n    DecimalFormat dFormat = new DecimalFormat(\"#0.00\");\n\n    public UI (GamePanel gp) {\n        this.gp = gp;\n\n        arial_40 = new Font(\"Arial\", Font.PLAIN, 40);\n//        arial_80B = new Font(\"Arial\", Font.BOLD, 40);\n//        ObjKey key = new ObjKey();\n//        keyImage = key.image;\n    }\n\n    public void showMessage (String text) {\n        message = text;\n        messageOn = true;\n    }\n\n    public void draw (Graphics2D g2) {\n\n        if (gameFinished) {\n\n//            g2.setFont(arial_40);\n//            g2.setColor(Color.white);\n//\n//            String text;\n//            int textLength;\n//            int x;\n//            int y;\n//\n//            text = \"You found the treasure!\";\n//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\n//            x = gp.screenWidth/2 - textLength/2;\n//            y = gp.screenHeight/2 - (gp.tileSize*3);\n//            g2.drawString(text, x, y);\n//\n//            text = \"You time is: \" + dFormat.format(playTime) + \"!\";\n//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\n//            x = gp.screenWidth/2 - textLength/2;\n//            y = gp.screenHeight/2 + (gp.tileSize*4);\n//            g2.drawString(text, x, y);\n//\n//            g2.setFont(arial_80B);\n//            g2.setColor(Color.yellow);\n//\n//            text = \"Congratulations!\";\n//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();\n//            x = gp.screenWidth/2 - textLength/2;\n//            y = gp.screenHeight/2 + (gp.tileSize*2);\n//            g2.drawString(text, x, y);\n//\n//            gp.gameThread = null;\n\n        }\n        else {\n            g2.setFont(arial_40);\n            g2.setColor(Color.white);\n            g2.drawString(\"Score: \" + dFormat.format(gp.inmate.score), 74, 65);\n\n            //Time\n            gp.inmate.time -= (double) 1/60;\n            g2.drawString(\"Time: \" + dFormat.format(gp.inmate.time), gp.cellSize*11, 65);\n\n//            //Message\n//            if (messageOn){\n//\n//                g2.setFont((g2.getFont().deriveFont(30F)));\n//                g2.drawString(message, gp.cellSize/2, gp.tileSize*5);\n//\n//                messageCounter++;\n//\n//                if (messageCounter > 120){\n//                    messageCounter = 0;\n//                    messageOn = false;\n//                }\n//            }\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/UI.java b/src/main/java/com/group10/app/main/UI.java
--- a/src/main/java/com/group10/app/main/UI.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/main/UI.java	(date 1647226295343)
@@ -1,95 +1,106 @@
 package com.group10.app.main;
 
+import com.group10.app.entity.Entity;
 import com.group10.app.objects.ObjKey;
 
 import java.awt.*;
 import java.awt.image.BufferedImage;
+import java.io.IOException;
+import java.io.InputStream;
 import java.text.DecimalFormat;
+import java.util.ArrayList;
 
 public class UI {
 
     GamePanel gp;
-    Font arial_40, arial_80B;
+    Graphics2D g2;
+    Font maruMonica, arial_40;
     BufferedImage keyImage;
-    public boolean messageOn = false;
-    public String message = "";
-    int messageCounter = 0;
-    public boolean gameFinished = false;
+    ArrayList<String> message = new ArrayList<>();
+    ArrayList<Integer> messageCounter = new ArrayList<>();
+//    public String currentDialogue = "";
+//    public int commandNum = 0;
+//    public int titleScreenState = 0; //0: the first screen, 1: the second screen
 
-    DecimalFormat dFormat = new DecimalFormat("#0.00");
+    DecimalFormat dFormat = new DecimalFormat("#0.0");
 
     public UI (GamePanel gp) {
+
         this.gp = gp;
 
+        try {
+            InputStream is = getClass().getResourceAsStream("/font/x12y16pxMaruMonica.ttf");
+            maruMonica = Font.createFont(Font.TRUETYPE_FONT, is);
+        } catch (FontFormatException | IOException e) {
+            e.printStackTrace();
+        }
+
         arial_40 = new Font("Arial", Font.PLAIN, 40);
-//        arial_80B = new Font("Arial", Font.BOLD, 40);
-//        ObjKey key = new ObjKey();
-//        keyImage = key.image;
+
+        Entity key = new ObjKey(gp);
+        keyImage = key.down1;
     }
 
-    public void showMessage (String text) {
-        message = text;
-        messageOn = true;
+    public void addMessage (String text) {
+        message.add(text);
+        messageCounter.add(0);
     }
 
     public void draw (Graphics2D g2) {
 
-        if (gameFinished) {
+        this.g2 = g2;
+
+        g2.setFont(maruMonica);
+        g2.setColor(Color.white);
 
-//            g2.setFont(arial_40);
-//            g2.setColor(Color.white);
-//
-//            String text;
-//            int textLength;
-//            int x;
-//            int y;
-//
-//            text = "You found the treasure!";
-//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();
-//            x = gp.screenWidth/2 - textLength/2;
-//            y = gp.screenHeight/2 - (gp.tileSize*3);
-//            g2.drawString(text, x, y);
-//
-//            text = "You time is: " + dFormat.format(playTime) + "!";
-//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();
-//            x = gp.screenWidth/2 - textLength/2;
-//            y = gp.screenHeight/2 + (gp.tileSize*4);
-//            g2.drawString(text, x, y);
-//
-//            g2.setFont(arial_80B);
-//            g2.setColor(Color.yellow);
-//
-//            text = "Congratulations!";
-//            textLength = (int)g2.getFontMetrics().getStringBounds(text, g2).getWidth();
-//            x = gp.screenWidth/2 - textLength/2;
-//            y = gp.screenHeight/2 + (gp.tileSize*2);
-//            g2.drawString(text, x, y);
-//
-//            gp.gameThread = null;
+        //Play state
+        if (GamePanel.state == GamePanel.STATE.GAME){
+            drawScoreTimeKey();
+            drawMessage();
+        }
 
-        }
-        else {
-            g2.setFont(arial_40);
-            g2.setColor(Color.white);
-            g2.drawString("Score: " + dFormat.format(gp.inmate.score), 74, 65);
+    }
+
+    public void drawScoreTimeKey() {
+
+        // Draw the Score
+        g2.setFont(arial_40);
+        g2.setColor(Color.white);
+        g2.drawString("Score: " + dFormat.format(gp.inmate.score), gp.cellSize, gp.cellSize);
 
-            //Time
-            gp.inmate.time -= (double) 1/60;
-            g2.drawString("Time: " + dFormat.format(gp.inmate.time), gp.cellSize*11, 65);
+        // Draw the Time
+        gp.inmate.time -= (double) 1/60;
+        g2.drawString("Time: " + dFormat.format(gp.inmate.time), gp.cellSize * 11, gp.cellSize);
+
+        // Draw the Key
+        g2.drawImage(keyImage, gp.cellSize * 21, gp.cellSize - 32, null);
+        g2.drawString("X " + gp.inmate.hasKey, gp.cellSize * 22, gp.cellSize);
+
+    }
+
+    public void drawMessage() {
+        int messageX = gp.cellSize;
+        int messageY = gp.cellSize * 4;
+        g2.setFont(g2.getFont().deriveFont(Font.BOLD, 32F));
 
-//            //Message
-//            if (messageOn){
-//
-//                g2.setFont((g2.getFont().deriveFont(30F)));
-//                g2.drawString(message, gp.cellSize/2, gp.tileSize*5);
-//
-//                messageCounter++;
-//
-//                if (messageCounter > 120){
-//                    messageCounter = 0;
-//                    messageOn = false;
-//                }
-//            }
+        for (int i = 0; i < message.size(); i++){
+
+            if (message.get(i) != null){
+
+                g2.setColor(Color.black);
+                g2.drawString(message.get(i), messageX+2, messageY+2);
+                g2.setColor(Color.white);
+                g2.drawString(message.get(i), messageX, messageY);
+
+                int counter = messageCounter.get(i) + 1; //messageCounter++
+                messageCounter.set(i, counter); //Set the counter to the array
+                messageY += 50;
+
+                if (messageCounter.get(i) > 180){
+                    message.remove(i);
+                    messageCounter.remove(i);
+                }
+            }
         }
     }
 }
Index: src/main/java/com/group10/app/objects/ObjTrap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.objects;\n\nimport javax.imageio.ImageIO;\nimport java.io.IOException;\n\npublic class ObjTrap extends SuperObject {\n\n    public ObjTrap(){\n\n        name = \"Trap\";\n\n        try {\n            image = ImageIO.read((getClass().getResourceAsStream(\"/trap/trap.png\")));\n\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/objects/ObjTrap.java b/src/main/java/com/group10/app/objects/ObjTrap.java
--- a/src/main/java/com/group10/app/objects/ObjTrap.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/objects/ObjTrap.java	(date 1647224840123)
@@ -1,20 +1,15 @@
 package com.group10.app.objects;
 
-import javax.imageio.ImageIO;
-import java.io.IOException;
+import com.group10.app.entity.Entity;
+import com.group10.app.main.GamePanel;
 
-public class ObjTrap extends SuperObject {
+public class ObjTrap extends Entity {
 
-    public ObjTrap(){
+    public ObjTrap(GamePanel gp){
+        super(gp);
 
         name = "Trap";
-
-        try {
-            image = ImageIO.read((getClass().getResourceAsStream("/trap/trap.png")));
-
-        }catch (IOException e){
-            e.printStackTrace();
-        }
+        down1 = setup("/trap/trap", gp.cellSize, gp.cellSize);
     }
 
 }
Index: src/main/java/com/group10/app/objects/SuperObject.java
===================================================================
diff --git a/src/main/java/com/group10/app/objects/SuperObject.java b/src/main/java/com/group10/app/objects/SuperObject.java
deleted file mode 100644
--- a/src/main/java/com/group10/app/objects/SuperObject.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ /dev/null	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
@@ -1,36 +0,0 @@
-package com.group10.app.objects;
-
-import com.group10.app.main.GamePanel;
-
-import java.awt.*;
-import java.awt.image.BufferedImage;
-
-public class SuperObject {
-
-    public BufferedImage image;
-    public String name;
-    public boolean collision = false;
-//    public int worldX, worldY;
-    public int x, y;
-    public Rectangle solidArea = new Rectangle(0, 0, 48, 48);
-    public int solidX = 0;
-    public int solidY = 0;
-
-    public void draw(Graphics2D g2, GamePanel gp) {
-
-//        int screenX = worldX - gp.inmate.worldX + gp.inmate.screenX;
-//        int screenY = worldY - gp.inmate.worldY + gp.inmate.screenY;
-//
-//        if (worldX + gp.tileSize > gp.player.worldX - gp.player.screenX &&
-//                worldX - gp.tileSize < gp.player.worldX + gp.player.screenX &&
-//                worldY + gp.tileSize > gp.player.worldY - gp.player.screenY &&
-//                worldY - gp.tileSize < gp.player.worldY + gp.player.screenY){
-//
-//
-//        }
-        g2.drawImage(image, x, y, gp.cellSize, gp.cellSize, null);
-
-    }
-
-
-}
Index: src/main/java/com/group10/app/entity/Gaurd.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.entity;\r\n\r\nimport javax.imageio.ImageIO;\r\nimport java.awt.*;\r\nimport java.awt.image.BufferedImage;\r\nimport java.io.IOException;\r\nimport com.group10.app.main.GamePanel;\r\n\r\n\r\npublic class Gaurd extends Entity{\r\n    GamePanel gp;\r\n\r\n    public Gaurd(GamePanel gp, int setx, int sety){\r\n        this.gp = gp;\r\n        getGaurdImage();\r\n        setgaurdValues(setx, sety);\r\n    }\r\n\r\n    //Registering the images\r\n    public void getGaurdImage(){\r\n        try{\r\n        up1 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkUp1.png\"));\r\n        up2 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkUp2.png\"));\r\n        up3 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkUp3.png\"));\r\n        down1 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkDown1.png\"));\r\n        down2 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkDown2.png\"));\r\n        down3 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkDown3.png\"));\r\n        left1 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkLeft1.png\"));\r\n        left2 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkLeft2.png\"));\r\n        left3 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkLeft3.png\"));\r\n        right1 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkRight1.png\"));\r\n        right2 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkRight2.png\"));\r\n        right3 = ImageIO.read(getClass().getResourceAsStream(\"/prisonGaurd/WalkDown3.png\"));\r\n        }catch(IOException e){e.printStackTrace();}\r\n    }\r\n\r\n    //Get Gaurds x position\r\n    public double getX(){\r\n        return x;\r\n    }\r\n    \r\n    //Get gaurds Y position\r\n    public double getY(){\r\n        return y;\r\n    }\r\n\r\n    //set the value for gaurd\r\n    public void setgaurdValues(int setx, int sety){\r\n        x = setx;\r\n        y = sety;\r\n        speed = 4;\r\n        direction = \"down\";\r\n    }\r\n\r\n    \r\n    public void draw(Graphics2D g2, GamePanel gP){\r\n        BufferedImage image = down1;\r\n\r\n\r\n        g2.drawImage(image, x , y, gp.cellSize, gp.cellSize, null);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/entity/Gaurd.java b/src/main/java/com/group10/app/entity/Gaurd.java
--- a/src/main/java/com/group10/app/entity/Gaurd.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/entity/Gaurd.java	(date 1647222126829)
@@ -11,6 +11,7 @@
     GamePanel gp;
 
     public Gaurd(GamePanel gp, int setx, int sety){
+        super(gp);
         this.gp = gp;
         getGaurdImage();
         setgaurdValues(setx, sety);
Index: src/main/java/com/group10/app/main/UtilityTool.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/main/UtilityTool.java b/src/main/java/com/group10/app/main/UtilityTool.java
new file mode 100644
--- /dev/null	(date 1647221835837)
+++ b/src/main/java/com/group10/app/main/UtilityTool.java	(date 1647221835837)
@@ -0,0 +1,17 @@
+package com.group10.app.main;
+
+import java.awt.*;
+import java.awt.image.BufferedImage;
+
+public class UtilityTool {
+
+    public BufferedImage scaleImage (BufferedImage original, int width, int height) {
+
+        BufferedImage scaledImage = new BufferedImage(width, height, original.getType());
+        Graphics2D g2 = scaledImage.createGraphics();
+        g2.drawImage(original, 0, 0, width, height, null);
+        g2.dispose();
+
+        return scaledImage;
+    }
+}
Index: src/main/java/com/group10/app/objects/ObjKey.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.objects;\n\nimport javax.imageio.ImageIO;\nimport java.io.IOException;\n\npublic class ObjKey extends SuperObject {\n\n    public ObjKey(){\n\n        name = \"Key\";\n\n        try {\n            image = ImageIO.read((getClass().getResourceAsStream(\"/collectibles/key.png\")));\n\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/objects/ObjKey.java b/src/main/java/com/group10/app/objects/ObjKey.java
--- a/src/main/java/com/group10/app/objects/ObjKey.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/objects/ObjKey.java	(date 1647222410463)
@@ -1,20 +1,15 @@
 package com.group10.app.objects;
 
-import javax.imageio.ImageIO;
-import java.io.IOException;
+import com.group10.app.entity.Entity;
+import com.group10.app.main.GamePanel;
 
-public class ObjKey extends SuperObject {
+public class ObjKey extends Entity {
 
-    public ObjKey(){
+    public ObjKey(GamePanel gp){
+        super(gp);
 
         name = "Key";
-
-        try {
-            image = ImageIO.read((getClass().getResourceAsStream("/collectibles/key.png")));
-
-        }catch (IOException e){
-            e.printStackTrace();
-        }
+        down1 = setup("/collectibles/key", gp.cellSize, gp.cellSize);
     }
 
 }
\ No newline at end of file
Index: src/main/java/com/group10/app/objects/ObjChicken.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group10.app.objects;\n\nimport javax.imageio.ImageIO;\nimport java.io.IOException;\n\npublic class ObjChicken extends SuperObject {\n\n    public ObjChicken(){\n\n        name = \"Chicken\";\n\n        try {\n            image = ImageIO.read((getClass().getResourceAsStream(\"/collectibles/chickenDrumStick.png\")));\n\n        }catch (IOException e){\n            e.printStackTrace();\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group10/app/objects/ObjChicken.java b/src/main/java/com/group10/app/objects/ObjChicken.java
--- a/src/main/java/com/group10/app/objects/ObjChicken.java	(revision ba7b599f40034c2704909b80ff5963ff20c2908f)
+++ b/src/main/java/com/group10/app/objects/ObjChicken.java	(date 1647224840094)
@@ -1,20 +1,15 @@
 package com.group10.app.objects;
 
-import javax.imageio.ImageIO;
-import java.io.IOException;
+import com.group10.app.entity.Entity;
+import com.group10.app.main.GamePanel;
 
-public class ObjChicken extends SuperObject {
+public class ObjChicken extends Entity {
 
-    public ObjChicken(){
+    public ObjChicken(GamePanel gp){
+        super(gp);
 
         name = "Chicken";
-
-        try {
-            image = ImageIO.read((getClass().getResourceAsStream("/collectibles/chickenDrumStick.png")));
-
-        }catch (IOException e){
-            e.printStackTrace();
-        }
+        down1 = setup("/collectibles/chickenDrumStick", gp.cellSize, gp.cellSize);
     }
 
 }
